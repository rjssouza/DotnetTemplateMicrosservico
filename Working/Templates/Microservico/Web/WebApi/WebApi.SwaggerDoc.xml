<?xml version="1.0"?>
<doc>
    <assembly>
        <name>WebApi</name>
    </assembly>
    <members>
        <member name="T:WebApi.Attribute.CustomHeaderSwaggerAttribute">
             <summary>
            
             </summary>
        </member>
        <member name="M:WebApi.Attribute.CustomHeaderSwaggerAttribute.Apply(Microsoft.OpenApi.Models.OpenApiOperation,Swashbuckle.AspNetCore.SwaggerGen.OperationFilterContext)">
             <summary>
            
             </summary>
             <param name="operation"></param>
             <param name="context"></param>
        </member>
        <member name="T:WebApi.Controllers.DashboardController">
             <summary>
            
             </summary>
        </member>
        <member name="M:WebApi.Controllers.DashboardController.#ctor(System.IServiceProvider)">
            <summary>
            Construtor
            </summary>
            <param name="serviceProvider">Service provider</param>
        </member>
        <member name="M:WebApi.Controllers.DashboardController.Get">
            <summary>
            Obter view model da tela de dashboard
            </summary>
            <returns>Dashboard</returns>
        </member>
        <member name="T:WebApi.Filter.ExceptionFilter">
            <summary>
            Filtro de exceção
            </summary>
        </member>
        <member name="M:WebApi.Filter.ExceptionFilter.#ctor(Microsoft.Extensions.Logging.ILogger{WebApi.Filter.ExceptionFilter})">
            <summary>
            Construtor de exceção utilizando logger registrado no modulo ioc
            </summary>
            <param name="logger">Logger</param>
        </member>
        <member name="M:WebApi.Filter.ExceptionFilter.OnExceptionAsync(Microsoft.AspNetCore.Mvc.Filters.ExceptionContext)">
            <summary>
            Método disparado quando a api estoura uma exceção
            </summary>
            <param name="context">Contexto da exceção</param>
            <returns>Resposta http</returns>
        </member>
        <member name="M:WebApi.Filter.ExceptionFilter.NotifyDev">
            <summary>
            Efetua notificação do time de desenvolvimento
            </summary>
        </member>
        <member name="M:WebApi.Filter.ExceptionFilter.ObterCodigoHttp(System.Exception)">
            <summary>
            Obtem código http da exceção de acordo com o tipo retornado da exceção
            </summary>
            <param name="excecao">Exceção</param>
            <returns>Http Status Code</returns>
        </member>
        <member name="M:WebApi.Filter.ExceptionFilter.ObterMensagem(System.Exception)">
            <summary>
            Obtém mensagem da exeção da mensagem de forma legível na resposta http
            </summary>
            <param name="excecao">Eceção retornada</param>
            <returns>Texto da mensagem</returns>
        </member>
        <member name="M:WebApi.Filter.ExceptionFilter.WriteLog(System.Exception)">
            <summary>
            Método para escrever log utilizando o logger customizado
            </summary>
            <param name="ex">Exceção</param>
        </member>
        <member name="T:WebApi.Program">
             <summary>
            
             </summary>
        </member>
        <member name="M:WebApi.Program.CreateHostBuilder(System.String[])">
             <summary>
            
             </summary>
             <param name="args"></param>
             <returns></returns>
        </member>
        <member name="M:WebApi.Program.Main(System.String[])">
             <summary>
            
             </summary>
             <param name="args"></param>
        </member>
        <member name="T:WebApi.Startup">
             <summary>
            
             </summary>
        </member>
        <member name="M:WebApi.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
            This method gets called by the runtime. Use this method to configure the HTTP request pipeline.
            </summary>
            <param name="app"></param>
            <param name="env"></param>
        </member>
        <member name="M:WebApi.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            This method gets called by the runtime. Use this method to add services to the container.
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:WebApi.Startup.SecureApi(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)">
             <summary>
            
             </summary>
             <param name="services"></param>
             <param name="configuration"></param>
        </member>
        <member name="T:WebApi.Utils">
            <summary>
            Utils
            </summary>
        </member>
        <member name="M:WebApi.Utils.GetContentType(System.String)">
             <summary>
            
             </summary>
        </member>
    </members>
</doc>
